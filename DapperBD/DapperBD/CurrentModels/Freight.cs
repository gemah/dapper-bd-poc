using Blive.Unilever.Dte.SharedModels.Freights.QueryFreights;
using System;

namespace DapperBD.CurrentModels
{
    /// <summary>
    /// Holds the information about the Freights returned by external systems (Mulesoft SD18).
    /// </summary>
    [Orm(Name = "freight", IdName = "id_freights")]
    public sealed class Freight : BaseEntity
    {
        public Freight() { }
        /// <summary>
        /// The internal GUID generated by this system for the FreightsEvent.
        /// </summary>
        [Orm(Ignore = true)]
        public Guid FreightsEventId { get; set; }

        /// <summary>
        /// Freights external shipment Number.
        /// </summary>
        [Orm(Name = "shipment_number")]
        public string ShipmentNumber { get; set; }

        /// <summary>
        /// Freights related action.
        /// </summary>
        [Orm(Ignore = true)]
        public string Action { get; set; }

        /// <summary>
        /// Freights related content.
        /// </summary>
        [Orm(Name = "payload")]
        public QueryFreightResponseRoot Content { get; set; }

        /// <summary>
        /// Constructor.
        /// </summary>
        public Freight(Guid freightsEventId, string shipmentNumber, string action, QueryFreightResponseRoot content)
            : base()
        {
            FreightsEventId = freightsEventId;
            ShipmentNumber = shipmentNumber;
            Action = action;
            Content = content;
        }
    }
}
